AWSTemplateFormatVersion: 2010-09-09

Parameters:

  VPCCidrBlock:
    Type: String
    Default: 10.0.0.0/16
    Description: Enter a CIDR range for the Snort VPC.

  PubSubNet1CidrBlock:
    Type: String
    Default: 10.0.1.0/24
    Description: Enter a CIDR range for the VPC.

  PubSubNet2CidrBlock:
    Type: String
    Default: 10.0.2.0/24
    Description: Enter a CIDR range for the VPC.
  
Mappings: {}

Conditions: {}

Outputs: {}

Resources:

  VPC:
    Type: 'AWS::EC2::VPC'
    Properties: 
      CidrBlock: !Ref VPCCidrBlock
      EnableDnsSupport: 'true'
      EnableDnsHostnames: 'true'
      Tags:
        - Key: Name
          Value: aws-transfer-vpc

  PubSubNet1:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: 
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      CidrBlock: !Ref PubSubNet1CidrBlock
      Tags:
        - Key: Name
          Value: aws-transfer-pub-sn1

  PubSubNet2:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      CidrBlock: !Ref PubSubNet2CidrBlock
      Tags:
        - Key: Name
          Value: aws-transfer-pub-sn2

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: aws-transfer-igw

  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC
   
  EIP:
    DependsOn: InternetGatewayAttachment
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: aws-transfer-igw-eip

  EIP1:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: aws-transfer-eip1

  EIP2:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: aws-transfer-eip2
 
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: aws-transfer-pub-rt
  
  DefaultPublicRoute:
    Type: AWS::EC2::Route
    DependsOn: InternetGatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
  
  PublicSubnetRouteTableAssociation1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PubSubNet1

  PublicSubnetRouteTableAssociation2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PubSubNet2
  
  AWSTransferCloudWatchRole:
    Type: AWS::IAM::Role
    Properties:
      ManagedPolicyArns:
        - !Join 
          - ''
          - - 'arn:aws:iam::'
            - !Ref AWS::AccountId
            - ':policy/CloudWatchWritePolicy'
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:          
          -
            Effect: Allow
            Principal:
              Service: transfer.amazonaws.com
            Action: 'sts:AssumeRole'
   
  SecurityGroup1:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow all
      VpcId: !Ref VPC
      SecurityGroupIngress:
      - IpProtocol: -1
        FromPort: 21
        ToPort: 21
        CidrIp: 0.0.0.0/0
      - IpProtocol: -1
        FromPort: 21
        ToPort: 21
        CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: aws-transfer-sg

  AWSTransferServer:
    Type: AWS::Transfer::Server
    Properties:
      EndpointType: VPC
      EndpointDetails: 
        SubnetIds: 
          - !Ref PubSubNet1
          - !Ref PubSubNet2
        VpcId: !Ref VPC
      IdentityProviderType: SERVICE_MANAGED
      LoggingRole: !GetAtt AWSTransferCloudWatchRole.Arn
      Protocols: 
        - SFTP